package j_collection;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;

import e_oop.ScanUtil;


public class Board {
	
	ArrayList<HashMap<String,Object>> boards = new ArrayList<>();
	HashMap<String, Object> board = new HashMap<>();
	static int number =0;
	static String title = "제목을 입력해주세요.";
	static String name = "작성자";
	SimpleDateFormat format1 = new SimpleDateFormat ("MM-dd-hh-mm-ss");
	
	
	public static void main(String[] args) {	

		/*
		 * ArrayList와 HashMap을 사용해 게시판 테이블을 만들고,
		 * 조회, 등록, 수정, 삭제가 가능한 게시판을 만들어주세요.
		 * 
		 * 번호(PK), 제목, 내용, 작성자, 작성일
		 * 
		 * 
		 * ------------------------------------------
		 * 번호 		제목		작성자		작성일
		 * ------------------------------------------
		 * 1		안녕하세요		홍길동	2/9
		 * 1		안녕하세요		홍길동	2/9
		 * 1		안녕하세요		홍길동	2/9
		 * 1		안녕하세요		홍길동	2/9
		 * 1		안녕하세요		홍길동	2/9
		 * ------------------------------------------
		 * 1.조회		2.등록	3.종료
		 * 
		 * 조회 후 수정, 삭제 가능
		 */
		new Board().start();
	}
	
	void start(){

		while(true){
			System.out.println("1.조회\t2.등록\t3.종료");
			int input = ScanUtil.nextInt();
		switch (input) {

		case 1:
			show();

			System.out.println("1.수정\t2.삭제");
			
			input = ScanUtil.nextInt();
			switch (input) {
			case 1:
				rewrite();
				break;
			case 2:
				delete();
				break;

			}
			break;

		case 2:
			write();
			break;

		case 3:			
			System.out.println("프로그램을 종료합니다.");
			ScanUtil.close();
			System.exit(0);
			break;
		}
		
		}
	}
	
	void write(){
		
		board = new HashMap<>();
		
		number++;
		board.put("번호", number);
		System.out.println("제목을 입력해주세요.");
		
		title = ScanUtil.nextLine();

		board.put("제목", title);

		
		System.out.println("작성자 이름을 입력해주세요.");

		name = ScanUtil.nextLine();

		board.put("작성자", name);
		

		Date now = new Date();
		String time = format1.format(now);
		board.put("작성일", time);

		boards.add(board);
	}

	
	void show(){
		System.out.println("---------------------------------");
		System.out.println("번호\t제목\t작성자\t작성일");
		for(int i =0; i <boards.size(); i++){
			HashMap<String, Object> b = boards.get(i);
			System.out.print(b.get("번호") + "\t");
			System.out.print(b.get("제목") + "\t");
			System.out.print(b.get("작성자") + "\t");
			System.out.print(b.get("작성일") + "\t");
			System.out.println();

			}
		System.out.println("----------------------------------");

		}
	
	
	void rewrite(){
		
		System.out.println("몇번 게시물을 수정하시겠습니까?");
		System.out.println("1.1번\t2.2번\t3.3번");
		int input = ScanUtil.nextInt();
		switch (input) {
		case 1:
			HashMap<String, Object> b1 = boards.get(0);
			System.out.println("제목을 수정해주세요.");
			title = ScanUtil.nextLine();
			boards.get(0).put("제목", title);
			System.out.println("작성자 이름을 입력해주세요.");
			name = ScanUtil.nextLine();
			boards.get(0).put("작성자", name);
			Date now = new Date();
			String time = format1.format(now);
			boards.get(0).put("작성일", time);
			break;
		case 2:
			HashMap<String, Object> b2 = boards.get(1);
			System.out.println("제목을 수정해주세요.");
			title = ScanUtil.nextLine();
			boards.get(1).put("제목", title);
			System.out.println("작성자 이름을 입력해주세요.");
			name = ScanUtil.nextLine();
			boards.get(1).put("작성자", name);
			now = new Date();
			time = format1.format(now);
			boards.get(1).put("작성일", time);
			break;
		case 3:
			HashMap<String, Object> b3 = boards.get(2);
			System.out.println("제목을 수정해주세요.");
			title = ScanUtil.nextLine();
			boards.get(2).put("제목", title);
			System.out.println("작성자 이름을 입력해주세요.");
			name = ScanUtil.nextLine();
			boards.get(2).put("작성자", name);
			now = new Date();
			time = format1.format(now);
			boards.get(2).put("작성일", time);
			break;

		default:
			break;
		}



		

	}
	
	void delete(){
		System.out.println("몇번 게시물을 삭제하시겠습니까?");
		System.out.println("1.1번\t2.2번\t3.3번");
		int input = ScanUtil.nextInt();
		switch (input) {
		case 1:
			HashMap<String, Object> b1 = boards.get(0);

			boards.get(0).remove("번호");
			boards.get(0).remove("제목");
			boards.get(0).remove("작성자");
			boards.get(0).remove("작성일");

			break;
		case 2:
			HashMap<String, Object> b2 = boards.get(1);
			boards.get(1).remove("번호");
			boards.get(1).remove("제목");
			boards.get(1).remove("작성자");
			boards.get(1).remove("작성일");

			break;
		case 3:
			HashMap<String, Object>b3 = boards.get(2);
			boards.get(2).remove("번호");
			boards.get(2).remove("제목");
			boards.get(2).remove("작성자");
			boards.get(2).remove("작성일");

			break;
	}
	
}
}
